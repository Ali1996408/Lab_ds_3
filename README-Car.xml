## 租车系统

该系统为用户提供了在选定日期预订汽车的机会。

格式为 [OpenAPI](%5Binst%5D%5Bv3%5D%20Car%20Rental%20System.yml) 的描述。

##### 功能退化

如果该方法需要从多个来源获取数据，那么在其中一个来源不可用的情况下_不重要_
源，然后将丢失的数据作为某些后备响应返回，并用剩余的数据替换
请求成功。

例如，如果汽车服务不可用，则“GET /api/v1/cars”方法应返回 500 错误，因为 收到数据
这项服务至关重要。

对于`GET /api/v1/rental`和`GET /api/v1/rental/{{rentalUid}}`方法，如果租赁服务不可用，则请求
应返回 500 错误，如果付款服务或汽车服务不可用，则“ payment”和“ car”字段应
仅包含 uid 条目（分别为“ paymentUid ”和“ carUid ”）。

##### 租车预订

1. 请求汽车服务部门核实此类汽车是否存在且可用。 如果满足条件，那么
    汽车已被预订（`availability = false`）。 如果汽车服务不可用，请求将失败并出现错误。
1. 向租赁服务提出创建预订记录的请求。
1. 如果向租赁服务请求失败（500错误或服务不可用），则回滚操作
    在汽车服务中预订汽车（`availability = true`）
1. 向支付服务发出创建支付的请求。
1. 如果对支付服务的请求失败（500错误或服务不可用），则操作回滚
    在付款服务和汽车服务中付款时，汽车的储备金将被删除（“availability = true”）。

##### 取消汽车预订

1. 向汽车服务提出请求，从汽车中删除储备（`availability = true`）。
1. 此后，向租赁服务请求设置租赁标志“CANCELED”。 如果此服务不可用，
    然后在网关服务上对请求进行排队并重复直到成功（超时 10 秒），然后
    转到下一步。
1. 向付款服务提出取消付款请求。 如果服务不可用，则与上一步类似，
    网关服务请求排队并重复，直到成功（超时 10 秒），而
    用户将获得有关整个操作成功完成的信息。


＃＃＃ 测试数据

测试场景中，_Payment Service_关闭，需要设置`serviceName`变量
在 [[classroom.yml](../.github/workflows/classroom.yml)] 中输入其在 Heroku 中的名称。

创建测试数据：

cars:
  – id: 1
    car_uid: "109b42f3-198d-4c89-9276-a7520a7120ab"
    brand: "Mercedes Benz"
    model: "GLA 250"
    registration_number: "ЛО777Х799"
    power: 249
    type: "SEDAN"
    price: 3500
    available: true